apply from: file("${rootDir}/gradle/project.gradle")

def dependencyManagementPluginVersion = "1.0.8.RELEASE"
def springBootVersion = "2.6.1"
def mybatisSpringVersion = "2.1.1"
def druidVersion = "1.1.10"
def mysqlVersion = '8.0.27'
def jedisVersion = "2.9.3"
def lombokVersion = "1.18.10"
def alibabaFastJsonVersion = "1.2.54"
def commonsCodecVersion = "1.10"
def commonsLangVersion = "2.6"
def springCloudEurekaVersion = "1.4.7.RELEASE"
def swaggerVersion = "1.9.1.RELEASE"
def validatorVersion = "6.0.13.Final"
def tkMapperBaseVersion = "1.0.1"
def servletApiVersion = "4.0.1"
def jjwtVersion = "0.9.1"
def mybatiesSpringBootTestVersion = "1.3.2"
def slf4jVersion = "1.7.30"
def cacheVersion = "1.1.1"
subprojects {
    group = "com.quantitative"
    version = '1.0.0'

    repositories {
        mavenCentral()
    }

    ext {
        lib = [
                'springBoot'         : "org.springframework.boot:spring-boot-starter:${springBootVersion}",
                'springBootJDBC'     : "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}",
                'springBootWeb'      : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
                'springBootUndertow' : "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}",
                'springBootProcessor': "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}",
                'springBootAOP'      : "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}",
                'springBootDevTools' : "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
                'springBootRedis'    : "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
                'springBootActuator' : "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
                'springBootTest'     : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",

                'mybatis'            : "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringVersion}",
                'thymeleaf'          : "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}",
                'mysql'              : "mysql:mysql-connector-java:${mysqlVersion}",
                'druid'              : "com.alibaba:druid-spring-boot-starter:${druidVersion}",
                'swagger'            : "com.spring4all:swagger-spring-boot-starter:${swaggerVersion}",
                'lombok'             : "org.projectlombok:lombok:${lombokVersion}",
                'alibabaFastJson'    : "com.alibaba:fastjson:${alibabaFastJsonVersion}",
                'jedis'              : "redis.clients:jedis:${jedisVersion}",
                'cacheApi'           : "javax.cache:cache-api:${cacheVersion}"
        ]
    }
}


configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-library') }) {
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${mybatisSpringVersion}"
        testImplementation "org.projectlombok:lombok:${lombokVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-service') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}"
        implementation "mysql:mysql-connector-java:${mysqlVersion}"
        implementation "com.alibaba:druid-spring-boot-starter:${druidVersion}"
        implementation "com.spring4all:swagger-spring-boot-starter:${swaggerVersion}"
        implementation "org.projectlombok:lombok:${lombokVersion}"
        implementation "com.alibaba:fastjson:${alibabaFastJsonVersion}"
        implementation "redis.clients:jedis:${jedisVersion}"
        implementation "javax.cache:cache-api:${cacheVersion}"

        testImplementation "org.projectlombok:lombok:${lombokVersion}"
    }
}