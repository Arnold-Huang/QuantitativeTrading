apply from: file("${rootDir}/gradle/project.gradle")

def springBootVersion = "2.6.1"
def mysqlVersion = '8.0.27'

subprojects {
    group = "com.quant"
    version = '1.0.0'

    repositories {
        mavenCentral()
        maven {
            url "https://repo.spring.io/release"
        }
        maven {
            url "https://maven.restlet.com"
        }
    }

    gradle.taskGraph.whenReady {
        tasks.each { task ->
            if (task.name.contains("test")) {
                task.enabled = false
            }
        }
    }
}

configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-library') }) {

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        implementation 'com.alibaba:fastjson:1.2.78'

        testImplementation 'junit:junit:4.13.2'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('cache-library') }) {
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-service') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"
        implementation "mysql:mysql-connector-java:${mysqlVersion}"
        implementation "com.alibaba:druid-spring-boot-starter:1.1.10"
        implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1"
        implementation 'com.alibaba:fastjson:1.2.78'

        testImplementation 'junit:junit:4.13.2'
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    }
}